ggtitle("Number of total deaths over years")
MissingMigDate
MissingMigDate <- ggplot( data = MM, aes( Year, MM$Tdeath )) +
geom_count()+ ylab("Number of deaths") +
geom_line()+
ggtitle("Number of total deaths over years")
MissingMigDate
MissingMigDate <- ggplot( data = MM, aes( Year, MM$Tdeath )) +
geom_count()+ ylab("Number of deaths") +
geom_curve()+
ggtitle("Number of total deaths over years")
MissingMigDate
MissingMigDate <- ggplot( data = MM, aes( Year, MM$Tdeath )) +
geom_count()+ ylab("Number of deaths") +
geom_dotplot()+
ggtitle("Number of total deaths over years")
MissingMigDate
MissingMigDate <- ggplot( data = MM, aes( Year, MM$Tdeath )) +
geom_count()+ ylab("Number of deaths") +
geom_freqpoly()+
ggtitle("Number of total deaths over years")
MissingMigDate
MissingMigDate <- ggplot( data = MM, aes( Year, MM$Tdeath )) +
geom_count()+ ylab("Number of deaths") +
geom_ribbon()+
ggtitle("Number of total deaths over years")
MissingMigDate
MissingMigDate <- ggplot( data = MM, aes( Year, MM$Tdeath )) +
geom_count()+ ylab("Number of deaths") +
geom_rect()+
ggtitle("Number of total deaths over years")
MissingMigDate
MissingMigDate <- ggplot( data = MM, aes( Year, MM$Tdeath )) +
geom_rect()+ ylab("Number of deaths") +
#geom_rect()+
ggtitle("Number of total deaths over years")
MissingMigDate
MissingMigrants <- read.csv("~/Udacity/P4/MissingMigrants2.csv")
#view the dataset
View(MissingMigrants)
MM = MissingMigrants
str(MM)
MM$affected_missing[is.na(MM$affected_missing)] <- 0
MM$affected_dead[is.na(MM$affected_dead)] <- 0
MM$geo_lat[is.na(MM$geo_lat)] <- 0
MM$geo_lon[is.na(MM$geo_lon)] <- 0
MM$Year <- as.Date(MM$date_reported,format="%d/%m/%Y")
MM$D <- as.numeric(MM$affected_dead)
MM$M <- as.numeric(MM$affected_missing)
MM$Tdeath <- MM$M + MM$D
MissingMigDate <- ggplot( data = MM, aes( Year, MM$Tdeath )) +
geom_()+ ylab("Number of deaths") +
#geom_rect()+
ggtitle("Number of total deaths over years")
MissingMigDate
MM$Tdeath <- MM$M + MM$D
MissingMigDate <- ggplot( data = MM, aes( Year, MM$Tdeath )) +
geom_line()+ ylab("Number of deaths") +
#geom_rect()+
ggtitle("Number of total deaths over years")
MissingMigDate
Mediterranean <- subset(MM, MM$region_incident == "Mediterranean")
year2017 <- subset(MM, MM$Year > "2017-01-01")
MENA <- subset(MM, MM$region_origin == "MENA")
ggplot( data = year2017, aes( Year, year2017$Tdeath)) +
geom_line()+ ylab("Number of total deaths") +
ggtitle("Number of deaths in 2017")+
xlab("Months of 2017")
ggplot( data = MM, aes( Year, MM$Tdeath )) +
geom_line()+
ylab("Number oftotal deaths")+
ggtitle("Total dead migrants over years")
P1 = ggplot( data = MM, aes( Year, MM$affected_dead )) + geom_line()
P2 = P1 +geom_line( data = MM, aes( Year, MM$affected_missing), colour="red")
P2+ ggtitle(label = "Number of missing and dead migrants over years")+
ylab("missing and dead number")+
theme(plot.title = element_text(family = "Trebuchet MS", color="blue", face="bold", size=32, hjust=0.5)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=17))
ggplot(data = MM,aes(x = MM$region_origin))+ geom_bar()+
theme(axis.text.x =element_text(angle = 90, hjust = 1,size = 12,color = "black"))+
ggtitle("Migrants Region of Origin")+
xlab("Region of Origin")
d=data.frame(beauty=c(1,2,6,4,4,6,7,8), intelligence=c(8,4,7,5,4,9,2,3), speed=c(7,6,9,5,7,6,7,8), gender=c('m','m','f','m','f','f','f','m'))
ggplot() +
scale_size_continuous(to=c(4,12)) +
geom_point(data=d, mapping=aes(x=intelligence, y=beauty, shape=gender, color=gender, size=speed)) +
opts(title="geom_point", plot.title=theme_text(size=40, vjust=1.5))
d=data.frame(beauty=c(1,2,6,4,4,6,7,8), intelligence=c(8,4,7,5,4,9,2,3), speed=c(7,6,9,5,7,6,7,8), gender=c('m','m','f','m','f','f','f','m'))
ggplot() +
scale_size_continuous(to=c(4,12)) +
geom_point(data=d, mapping=aes(x=intelligence, y=beauty, shape=gender, color=gender, size=speed)) +
opts(title="geom_point", plot.title=theme_text(size=40, vjust=1.5))
d=data.frame(beauty=c(1,2,6,4,4,6,7,8), intelligence=c(8,4,7,5,4,9,2,3), speed=c(7,6,9,5,7,6,7,8), gender=c('m','m','f','m','f','f','f','m'))
ggplot() +
scale_size_continuous(to=c(10,10)) +
geom_point(data=d, mapping=aes(x=intelligence, y=beauty, shape=gender, color=gender, size=speed)) +
opts(title="geom_point", plot.title=theme_text(size=40, vjust=1.5))
d=data.frame(beauty=c(1,2,6,4,4,6,7,8), intelligence=c(8,4,7,5,4,9,2,3), speed=c(7,6,9,5,7,6,7,8), gender=c('m','m','f','m','f','f','f','m'))
ggplot() +
#scale_size_continuous(to=c(10,10)) +
geom_point(data=d, mapping=aes(x=intelligence, y=beauty, shape=gender, color=gender, size=speed)) +
opts(title="geom_point", plot.title=theme_text(size=40, vjust=1.5))
d=data.frame(beauty=c(1,2,6,4,4,6,7,8), intelligence=c(8,4,7,5,4,9,2,3), speed=c(7,6,9,5,7,6,7,8), gender=c('m','m','f','m','f','f','f','m'))
ggplot() +
#scale_size_continuous(to=c(10,10)) +
geom_point(data=d, mapping=aes(x=intelligence, y=beauty, shape=gender, color=gender, size=speed)) +
ggtitle(title="geom_point", plot.title=theme_text(size=40, vjust=1.5))
d=data.frame(beauty=c(1,2,6,4,4,6,7,8), intelligence=c(8,4,7,5,4,9,2,3), speed=c(7,6,9,5,7,6,7,8), gender=c('m','m','f','m','f','f','f','m'))
ggplot() +
#scale_size_continuous(to=c(10,10)) +
geom_point(data=d, mapping=aes(x=intelligence, y=beauty, shape=gender, color=gender, size=speed)) +
ggtitle("geom_point",size=40, vjust=1.5)
d=data.frame(beauty=c(1,2,6,4,4,6,7,8), intelligence=c(8,4,7,5,4,9,2,3), speed=c(7,6,9,5,7,6,7,8), gender=c('m','m','f','m','f','f','f','m'))
ggplot() +
#scale_size_continuous(to=c(10,10)) +
geom_point(data=d, mapping=aes(x=intelligence, y=beauty, shape=gender, color=gender, size=speed)) +
ggtitle("geom_point")
Nationality <- as.data.frame.character(MM$affected_nationality)
country <- as.data.frame.character(MM$region_incident)
lat <- as.data.frame.factor(MM$geo_lat)
lon <- as.data.frame.factor(MM$geo_lon)
Deaths <- as.data.frame.numeric(MM$affected_dead)
Missings <- as.data.frame.numeric(MM$affected_missing)
DDate <- as.data.frame.Date(MM$Year)
ggplot() +
geom_point(data=MM, mapping=aes(x=DDate, y=Deaths, shape=Nationality, color=Nationality, size=Deaths)) +
ggtitle("Number of Deaths during years by Nationality")
ggplot() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y")+
geom_point(data=MM, mapping=aes(x=DDate, y=Deaths, shape=Nationality, color=Nationality, size=Deaths)) +
ggtitle("Number of Deaths during years by Nationality")
ggplot() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y")+
geom_point(data=MM, mapping=aes(x=DDate, y=Deaths, color=Nationality, size=Deaths)) +
ggtitle("Number of Deaths during years by Nationality")
ggplot() +
scale_alpha_continuous()+
geom_point(data=MM, mapping=aes(x=DDate, y=Deaths, color=Nationality, size=Deaths)) +
ggtitle("Number of Deaths during years by Nationality")
View(DDate)
ggplot() +
geom_point(data=MM, mapping=aes(x=DDate, y=Deaths)) +
ggtitle("Number of Deaths during years by Nationality")
ggplot(data = MM,aes(x = MM$region_origin))+ geom_bar()+
theme(axis.text.x =element_text(angle = 90, hjust = 1,size = 12,color = "black"))+
ggtitle("Migrants Region of Origin")+
xlab("Region of Origin")
MissingMigDate
MissingMigDate  scale_x_date()
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
library(gridExtra)
library(rworldmap)
library(tidyr)
######################333
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
# import the dataset
MissingMigrants <- read.csv("~/Udacity/P4/MissingMigrants2.csv")
#view the dataset
View(MissingMigrants)
MM = MissingMigrants
str(MM)
#Dataset cleaning
#The dataset has missing values (NA) it will be treated dirrently based on the variable..
?is.na
MM$affected_missing[is.na(MM$affected_missing)] <- 0
MM$affected_dead[is.na(MM$affected_dead)] <- 0
MM$geo_lat[is.na(MM$geo_lat)] <- 0
MM$geo_lon[is.na(MM$geo_lon)] <- 0
#change the current date format to be suitable to R
MM$Year <- as.Date(MM$date_reported,format="%d/%m/%Y")
# Let's assign color values to some regions, of interest so we can use them to plot later
MM$color[MM$region_incident == "Mediterranean"] <- "red"
MM$color[MM$region_incident == "Middle East"] <- "BLUE"
MM$color[MM$region_origin== "MENA"] <- "yellow"
MM$Year <- as.Date(MM$date_reported,format="%d/%m/%Y")
# assume the missing migrants are dead and sum the dead and the missings
MM$D <- as.numeric(MM$affected_dead)
MM$M <- as.numeric(MM$affected_missing)
MM$Tdeath <- MM$M + MM$D
MissingMigDate <- ggplot( data = MM, aes( Year, MM$Tdeath )) +
geom_line()+ ylab("Number of deaths") +
#geom_rect()+
ggtitle("Number of total deaths over years")
MissingMigDate  scale_alpha(range = c(year2017))
#subsetting only Mediterranean
Mediterranean <- subset(MM, MM$region_incident == "Mediterranean")
#subsetting by year2017
year2017 <- subset(MM, MM$Year > "2017-01-01")
#subset by regon of oregion
MENA <- subset(MM, MM$region_origin == "MENA")
#different informations (Deaths Vs Missing)
ggplot( data = year2017, aes( Year, year2017$Tdeath)) +
geom_line()+ ylab("Number of total deaths") +
ggtitle("Number of deaths in 2017")+
xlab("Months of 2017")
ggplot( data = MM, aes( Year, MM$Tdeath )) +
geom_line()+
ylab("Number oftotal deaths")+
ggtitle("Total dead migrants over years")
# Combine into one
P1 = ggplot( data = MM, aes( Year, MM$affected_dead )) + geom_line()
P2 = P1 +geom_line( data = MM, aes( Year, MM$affected_missing), colour="red")
P2+ ggtitle(label = "Number of missing and dead migrants over years")+
ylab("missing and dead number")+
theme(plot.title = element_text(family = "Trebuchet MS", color="blue", face="bold", size=32, hjust=0.5)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=17))
summary.factor(MM$region_origin)
ggplot(data = MM,aes(x = MM$region_origin))+ geom_bar()+
theme(axis.text.x =element_text(angle = 90, hjust = 1,size = 12,color = "black"))+
ggtitle("Migrants Region of Origin")+
xlab("Region of Origin")
##########################################################################
#subset by regon of oregion   NOT YET READY
MENA <- subset(MM, MM$region_origin == "MENA")
MENAplot <- ggplot(MENA, aes(x=MENA$Tdeath, y = MENA$Year)) +
geom_bar()+
theme(axis.text.x =element_text(angle = 90, hjust = 0.5,size = 12,color = "black"))+
ggtitle("Region of incident")+
xlab("Years")+
ylab("Total number of deaths")+
theme(plot.title = element_text(family = "Trebuchet MS", color="blue", face="bold", size=32, hjust=0.5)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="gray", face="bold", size=17)) +
theme(axis.text = element_text(family = "Trebuchet MS", color="gray", face="bold", size=14))
MENAplot
+ coord_cartesian(xlim = c(0,25), ylim = c(25,45))
#####################################################################3
summary.factor(MM$region_incident)
#Region Inc Migr RIM
MM$RIM  <- factor(MM$region_incident,
levels=c("North Africa", "Mediterranean",
"U.S./Mexico Border", "NA" ,"Central America incl. Mexico",
"Horn of Africa", "Europe"))
ggplot(MM, aes(x=RIM)) +
geom_bar()+
theme(axis.text.x =element_text(angle = 90, hjust = 0.5,size = 12,color = "black"))+
ggtitle("Region of incident")+
xlab("Region of incident")+
theme(plot.title = element_text(family = "Trebuchet MS", color="blue", face="bold", size=32, hjust=0.5)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=17)) +
theme(axis.text = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=14)) +
geom_hline(yintercept = 500, size = 1, linetype = 7)+
coord_flip()
#############################################################################3
unique(MM$region_incident)[order(unique(MM$region_incident), decreasing = F)]
MM$UniRR<- MM$region_incident[order(MM$region_incident)]
ggplot(data = MM,aes(x = MM$UniRR))+ geom_bar()+
theme(axis.text.x =element_text(angle = 90, hjust = 0.5,size = 12,color = "black"))+
ggtitle("Region of incident")+
xlab("Region of incident")+
theme(plot.title = element_text(family = "Trebuchet MS", color="blue", face="bold", size=32, hjust=0.5)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="darkgray", face="bold", size=17)) +
theme(axis.text = element_text(family = "Trebuchet MS", color="darkgray", face="bold", size=14)) +
geom_hline(yintercept = 500, size = 1, linetype = 7)+
coord_flip()
###########################################################
ggplot(data = MM,aes(x = MM$meta_source_reliability))+ geom_bar()+
theme(axis.text.x =element_text(angle = 90, hjust = 0.5,size = 12,color = "black"))+
ggtitle("Information Verivecation")+
xlab("source relability") +
coord_flip()
# Plotting coordinates into a map
Nationality <- as.data.frame.character(MM$affected_nationality)
country <- as.data.frame.character(MM$region_incident)
lat <- as.data.frame.factor(MM$geo_lat)
lon <- as.data.frame.factor(MM$geo_lon)
Deaths <- as.data.frame.numeric(MM$affected_dead)
Missings <- as.data.frame.numeric(MM$affected_missing)
DDate <- as.data.frame.Date(MM$Year)
#####################################################################################################
#New try
#from http://sarahleejane.github.io/learning/r/2014/09/20/plotting-beautiful-clear-maps-with-r.html
world_map <- map_data("world")
#Add map to base plot
ma <- ggplot() + coord_fixed() +
xlab("") + ylab("")
#Add map to base plot
base_world_messy <- ma + geom_polygon(data=world_map, aes(x=long, y=lat, group=group),
colour="light green", fill="light green")
base_world_messy
cleanup <-
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'white', colour = 'white'),
axis.line = element_line(colour = "white"), legend.position="none",
axis.ticks=element_blank(), axis.text.x=element_blank(),
axis.text.y=element_blank())
base_world <- base_world_messy + cleanup
base_world
#####################################
# plotting on maps         ##
#####################################
#region incident
map_data <-
base_world +
geom_count(data= country,
aes(x=lon, y=lat), colour="Deep Pink",
fill="Pink",pch=21, size=3, alpha=I(0.5))+
geom_text()
map_data
#plot both missing and deaths by size
# 1 Total Death
map_data_Deaths <-
base_world_messy +
geom_count(data=MM$Tdeath,
aes(x=lon, y=lat), colour="blue",
fill="yellow",pch=21 , alpha=I(0.5))
map_data_Deaths
#missing
map_data_both <-
map_data_Deaths +
geom_count(data=Missings,
aes(x=lon, y=lat), colour="pink",
fill="red",pch=33, alpha=I(0.4))
map_data_both
#zoom in to the middle east and medeterrean
ME <- map_data_both + coord_cartesian(xlim = c(-15,100), ylim = c(-40,55))
ME + coord_cartesian(xlim = c(10,40), ylim = c(20,45)) +
scale_alpha(range = c(01,1))
####################################
lonMENA <- as.data.frame.factor(MENA$geo_lon)
latMENA <- as.data.frame.factor(MENA$geo_lat)
TD_MENA <- as.data.frame.factor(MENA$Tdeath)
MENAdeaths <-
base_world_messy +
geom_count(data=TD_MENA,
aes(x=lonMENA, y=latMENA), colour="yellow",
fill="blue",pch=21 , alpha=I(0.5))+
MENAdeaths
MENAdeaths + coord_cartesian(xlim = c(-10,50), ylim = c(25,53)) +
geom_polygon(aes(group=MENA$region_origin))
MissingMigDate  scale_alpha(range = c(year2017))
MissingMigrants <- read.csv("~/Udacity/P4/MissingMigrants2.csv")
MissingMigrants <- read.csv("~/Udacity/P4/MissingMigrants2.csv")
View(MissingMigrants)
MM = MissingMigrants
MM = MissingMigrants
str(MissingMigrants)
str(MM)
str(MissingMigrants)
str(MM)
?is.na
MM$affected_missing[is.na(MM$affected_missing)] <- 0
MM$affected_missing[is.na(MM$affected_missing)] <- 0
MM$Year <- as.Date(MM$date_reported,format="%d/%m/%Y")
MM$Year <- as.Date(MM$date_reported,format="%d/%m/%Y")
str(MissingMigrants)
str(MissingMigrants)
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
library(gridExtra)
library(rworldmap)
library(tidyr)
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
library(RColorBrewer)
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
library(gridExtra)
library(rworldmap)
library(tidyr)
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
library(RColorBrewer)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggmap")
install.packages("mapdata")
install.packages("arabicStemR")
install.packages("ArArRedux")
install.packages("scales")
install.packages("gridExtra")
install.packages("GGally")
install.packages("rworldmap")
install.packages("tidyr")
RealEstate <- read.csv('/home/yasser/Documents/Quant/realstate_testdata.csv')
View(RealEstate)
# import the dataset
RealEstate <- read.csv('/home/yasser/Documents/Quant/realstate_testdata.csv')
#view the dataset
View(RealEstate)
# assign it to a simple variable
RE = RealEstate
#exploring
str(RealEstate)
str(RE)
View(RealEstate)
View(RealEstate)
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
library(gridExtra)
library(rworldmap)
library(tidyr)
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
library(RColorBrewer)
install.packages("memisc")
library(ggplot2)
library(ggmap)
library(maps)
library(mapdata)
library(gridExtra)
library(rworldmap)
library(tidyr)
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
library(RColorBrewer)
?is.na
is.na(RE$Latitude)
sum(is.na(RE$Latitude))
sum(is.na(RE$Latitude))
sum(is.na(RE$Longitude))
sum(is.na(RE$عدد.غرف.النوم))
sum(is.na(RE$للبيع.أم.الإيجار))
sum(is.na(RE$السعر))
sum(is.na(RE$عوائل.أم.عزاب))
# import the dataset
MissingMigrants <- read.csv("~/Udacity/P4/MissingMigrants2.csv")
#view the dataset
View(MissingMigrants)
# assign it to a simple variable
MM = MissingMigrants
#exploring
str(MissingMigrants)
str(MM)
#Dataset cleaning
#The dataset has missing values (NA) it will be treated directly on the variable..
#the following 4 variables have
?is.na
MM$affected_missing[is.na(MM$affected_missing)] <- 0
MM$affected_dead[is.na(MM$affected_dead)] <- 0
MM$geo_lat[is.na(MM$geo_lat)] <- 0
MM$geo_lon[is.na(MM$geo_lon)] <- 0
#change the current date format to be suitable to R
MM$Year <- as.Date(MM$date_reported,format="%d/%m/%Y")
# Let's assign color values to some regions, of interest so we might use them to plot later
MM$color[MM$region_incident == "Mediterranean"] <- "red"
MM$color[MM$region_incident == "Middle East"] <- "yellow"
MM$color[MM$region_origin== "MENA"] <- "blu"
MM$Year <- as.Date(MM$date_reported,format="%d/%m/%Y")
# assume the missing migrants are dead and then sum the dead and the missings
#this step to explore the total death by years/moths as following
MM$D <- as.numeric(MM$affected_dead)
MM$M <- as.numeric(MM$affected_missing)
MM$Tdeath <- MM$M + MM$D
MissingMigDate <- ggplot( data = MM, aes( Year, MM$Tdeath )) +
geom_line()+ ylab("Number of deaths") +
ggtitle("Number of total deaths over years")
MissingMigDate
MissingMigrants <- read.csv("~/Udacity/P4/MissingMigrants2.csv")
# import the dataset
MissingMigrants <- read.csv("/home/yasser/Documents/Udacity/P4/P4_YasserAlnakhli_2nd (2)/MissingMigrants2.csv")
#view the dataset
View(MissingMigrants)
# assign it to a simple variable
MM = MissingMigrants
#exploring
str(MissingMigrants)
str(MM)
#Dataset cleaning
#The dataset has missing values (NA) it will be treated directly on the variable..
#the following 4 variables have
?is.na
MM$affected_missing[is.na(MM$affected_missing)] <- 0
MM$affected_dead[is.na(MM$affected_dead)] <- 0
MM$geo_lat[is.na(MM$geo_lat)] <- 0
MM$geo_lon[is.na(MM$geo_lon)] <- 0
#change the current date format to be suitable to R
MM$Year <- as.Date(MM$date_reported,format="%d/%m/%Y")
# Let's assign color values to some regions, of interest so we might use them to plot later
MM$color[MM$region_incident == "Mediterranean"] <- "red"
MM$color[MM$region_incident == "Middle East"] <- "yellow"
MM$color[MM$region_origin== "MENA"] <- "blu"
MM$Year <- as.Date(MM$date_reported,format="%d/%m/%Y")
# assume the missing migrants are dead and then sum the dead and the missings
#this step to explore the total death by years/moths as following
MM$D <- as.numeric(MM$affected_dead)
MM$M <- as.numeric(MM$affected_missing)
MM$Tdeath <- MM$M + MM$D
MissingMigDate <- ggplot( data = MM, aes( Year, MM$Tdeath )) +
geom_line()+ ylab("Number of deaths") +
ggtitle("Number of total deaths over years")
MissingMigDate
# assume the missing migrants are dead and then sum the dead and the missings
#this step to explore the total death by years/moths as following
MM$D <- as.numeric(MM$affected_dead)
MM$M <- as.numeric(MM$affected_missing)
MM$Tdeath <- MM$M + MM$D
MissingMigDate <- ggplot( data = MM, aes( Year, MM$Tdeath )) +
geom_line()+ ylab("Number of deaths") +
ggtitle("Number of total deaths over years")
MissingMigDate
